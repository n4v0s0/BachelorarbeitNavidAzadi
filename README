#############
ANLEITUNG ZUR KORREKTEN AUSÜHRUNG DER SKRIPTE
#############


(Folgende befehle alle im geclonten Repository ausführen)
Aufruf-ReihenFolge:
1. bash install_dependencies.sh
2. python3 compile.py
3. python3 getNgrams.py N                 <- N = parameter der besagt, mit welchem N die gewünschten N-Gramme berechnet werden sollen
4. python3 getTfidf.py
5. python3 makeMlTables.py
6. python3 crossVal.py
7. python3 randomForest.py


#############
Der hier gezeigte Ablauf wurde auf einer Virtual Machine mit Ubuntu 20.04
erfolgreich getestet. 
#############



############
ERLÄUTERUNG DER EINZELNEN SKRIPTE
############

install_dependencies.sh:
->Downloadet die benötigten Repositories und Installiert alle Programme/Bibliotheken die für die folgenden Skripts benötigt werden.
 
getTfidf.py:
-> erstellt im selben Ordner in dem tf_idf.py sich befindet einen Ausgabe-Ordner in dem die TFIDF-Dateien der Optimierungen sich befinden

getNgrams.py:
!!!kriegt als erstes argument N für N-Grams
-> erstellt Ordner "outputNgram" in dem sich die N-Gram Dateien der jeweiligen Binaries in unterordnern der optimierungen befinden

compile.py:
-> erstellt im selben ordner einen ordner "binaries" in dem für jede optimierung unterordner erstellt werden in welche die binaries verschoben werden

crossVal.py:
-> berechnet anhand der aktuellen Daten in "ML_Tabellen" Kreuzvalidierungswerte für Naive Bayes, Decision Tree und Random Forest Klassifzierer. Erzeugt ein Matplot Fenster, dass manuell gespeichert werden kann.

randomForest.py
-> berechnet anhand der Daten in "ML_Tabellen" die Accuracy, recall, precision und f1 Werte für einen RandomForest Klassifizierer. Speichert Balken-Diagramme in "ML-Diagramme".
-> Speichert für jede Optimierung Konfusionsmatrizen in Unterordner von ML_Tabellen
-> erstellt Textdateien in denen die genauen Werte der ML-Metriken für alle Optimierungen gespeichert werden

makeMlTables.py:
-> erstellt für jede Optimierung eine Tabelle, welche von den Machine-Learning Klassifizieren als Input-Data verwendet wird. Speichert diese in "ML_Tabellen"

